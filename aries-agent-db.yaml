# Sample docker-compose to start a local aca-py in multi-ledger mode
# To start aca-py and the postgres database, just run `docker-compose up`
# To shut down the services run `docker-compose rm` - this will retain the postgres database, so you can change aca-py startup parameters
# and restart the docker containers without losing your wallet data
# If you want to delete your wallet data just run `docker volume ls -q | xargs docker volume rm`

# Note this requires von-network (https://github.com/bcgov/von-network) and indy-tails-server (https://github.com/bcgov/indy-tails-server) are already running

version: "3"
services:
  issuer-agent:
    image: aries-cloudagent:py3.9-indy-1.16.0_0.11.0-rc1
    ports:
      - 11000:11000
      - 8001:8001
    depends_on:
      - wallet-db
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 5; \
        aca-py start \
        --auto-provision \
        --seed 'issuer00000000000000000000000001' \
        --inbound-transport http '0.0.0.0' 8001 \
        --endpoint 'http://host.docker.internal:8001' \
        --outbound-transport http \
        --genesis-url 'http://webserver:8000/genesis' \
        --auto-accept-invites \
        --auto-accept-requests \
        --auto-ping-connection \
        --auto-respond-messages \
        --auto-respond-credential-proposal \
        --auto-respond-credential-offer \
        --auto-respond-credential-request \
        --auto-verify-presentation \
        --notify-revocation \
        --monitor-revocation-notification \
        --wallet-type 'askar' \
        --wallet-name 'acapy_agent_wallet' \
        --wallet-key 'key' \
        --wallet-storage-type 'postgres_storage' \
        --wallet-storage-config '{\"url\":\"wallet-db:5432\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"DB_USER\",\"password\":\"DB_PASSWORD\",\"admin_account\":\"DB_USER\",\"admin_password\":\"DB_PASSWORD\"}' \
        --admin '0.0.0.0' 11000 \
        --admin-insecure-mode \
        --label 'issuer_agent' \
        --log-level 'info' ",
      ]
    # volumes:
      # - ./ledgers.yaml:/home/aries/ledgers.yaml
    networks:
      - von

  holder-agent:
    image: aries-cloudagent:py3.9-indy-1.16.0_0.11.0-rc1
    ports:
      - 11001:11000
      - 8002:8001
    depends_on:
      - wallet-db1
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 5; \
        aca-py start \
        --auto-provision \
        --seed 'holder00000000000000000000000001' \
        --inbound-transport http '0.0.0.0' 8001 \
        --endpoint 'http://host.docker.internal:8001' \
        --outbound-transport http \
        --genesis-url 'http://webserver:8000/genesis' \
        --auto-accept-invites \
        --auto-accept-requests \
        --auto-ping-connection \
        --auto-respond-messages \
        --auto-respond-credential-proposal \
        --auto-respond-credential-offer \
        --auto-respond-credential-request \
        --auto-verify-presentation \
        --notify-revocation \
        --monitor-revocation-notification \
        --wallet-type 'askar' \
        --wallet-name 'acapy_agent_wallet' \
        --wallet-key 'key' \
        --wallet-storage-type 'postgres_storage' \
        --wallet-storage-config '{\"url\":\"wallet-db1:5432\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"DB_USER\",\"password\":\"DB_PASSWORD\",\"admin_account\":\"DB_USER\",\"admin_password\":\"DB_PASSWORD\"}' \
        --admin '0.0.0.0' 11000 \
        --admin-insecure-mode \
        --label 'holder_agent' \
        --log-level 'info' ",
      ]

    networks:
      - von



  verifier-agent:
    image: aries-cloudagent:py3.9-indy-1.16.0_0.11.0-rc1
    ports:
      - 11002:11000
      - 8003:8001
    depends_on:
      - wallet-db2
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 5; \
        aca-py start \
        --auto-provision \
        --seed 'verifi00000000000000000000000001' \
        --inbound-transport http '0.0.0.0' 8001 \
        --endpoint 'http://host.docker.internal:8001' \
        --outbound-transport http \
        --genesis-url 'http://webserver:8000/genesis' \
        --auto-accept-invites \
        --auto-accept-requests \
        --auto-ping-connection \
        --auto-respond-messages \
        --auto-respond-credential-proposal \
        --auto-respond-credential-offer \
        --auto-respond-credential-request \
        --auto-verify-presentation \
        --notify-revocation \
        --monitor-revocation-notification \
        --wallet-type 'askar' \
        --wallet-name 'acapy_agent_wallet' \
        --wallet-key 'key' \
        --wallet-storage-type 'postgres_storage' \
        --wallet-storage-config '{\"url\":\"wallet-db2:5432\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"DB_USER\",\"password\":\"DB_PASSWORD\",\"admin_account\":\"DB_USER\",\"admin_password\":\"DB_PASSWORD\"}' \
        --admin '0.0.0.0' 11000 \
        --admin-insecure-mode \
        --label 'verifier_agent' \
        --log-level 'info' ",
      ]

    networks:
      - von



  wallet-db:
    image: postgres:12
    environment:
      - POSTGRES_USER=DB_USER
      - POSTGRES_PASSWORD=DB_PASSWORD
    ports:
      - 5433:5432
    volumes:
      - ./wallet-db-data:/var/lib/pgsql/data
    networks:
      - von

  wallet-db1:
    image: postgres:12
    environment:
      - POSTGRES_USER=DB_USER
      - POSTGRES_PASSWORD=DB_PASSWORD
    ports:
      - 5434:5432
    volumes:
      - ./wallet-db-data1:/var/lib/pgsql/data
    networks:
      - von

  wallet-db2:
    image: postgres:12
    environment:
      - POSTGRES_USER=DB_USER
      - POSTGRES_PASSWORD=DB_PASSWORD
    ports:
      - 5435:5432
    volumes:
      - ./wallet-db-data2:/var/lib/pgsql/data
    networks:
      - von


networks:
  von:
